// This file may be autogenerated, do not place meaningful code here. 
// Use it only to define a list of nc-words (registers) that may appear 
// in blocks of the nc-file.
namespace DotnetPostprocessing.Post
{
    ///<summary>A class that defines the nc-file - main output file that should be generated by the postprocessor.</summary>
    public partial class NCFile: TTextNCFile
    {
        ///<summary>The block of the nc-file is an ordered list of nc-words</summary>
        public NCBlock Block;

        ///<summary>Automatic block numbers counter</summary>
        public CountingNCWord BlockN = new CountingNCWord("N{######}", 1, 1, 1);

        ///<summary>G54-G59 - current workpiece coordinate system number</summary>
        public NumericNCWord GWCS = new NumericNCWord("G{##}", 54);

        ///<summary>G00, G01, G02, G03 - current mode of an interpolation</summary>
        public NumericNCWord GInterp = new NumericNCWord("G{00}", 0);

        ///<summary>X coordinate of the movement</summary>
        public NumericNCWord X = new NumericNCWord("X{-#####!####}", 0);

        ///<summary>Y coordinate of the movement</summary>
        public NumericNCWord Y = new NumericNCWord("Y{-#####!####}", 0);

        ///<summary>Z coordinate of the movement</summary>
        public NumericNCWord Z = new NumericNCWord("Z{-#####!####}", 0);

        ///<summary>Circle radius</summary>
        public NumericNCWord R = new NumericNCWord("R{-#####!####}", 0);

        ///<summary>Feedrate value of the movement</summary>
        public NumericNCWord F = new NumericNCWord("F{#####}", 0);

        public NCFile(): base()
        {
            Block = new NCBlock(this, 
                BlockN, 
                GWCS, 
                GInterp, 
                X, 
                Y, 
                Z, 
                R, 
                F
            );
            OnInit();
        }

    }
}